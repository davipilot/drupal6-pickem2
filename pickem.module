<?php
// $Id: pickem.module,v 1.1.2.4 2008/09/22 18:20:32 jvandervort Exp $

/**
 * @file
 * pickem module allows you to run a pickem league.
*/

error_reporting(E_ALL | E_STRICT);

require_once 'pickem.inc';

/*
 * GLOBALS
 */
global $PICKEM_TIMEZONE;
$PICKEM_TIMEZONE = variable_get('pickem_time_zone', 'US/Eastern');
// dump this conditional for drupal 7, date_default_timezone_set is php5
if( function_exists('date_default_timezone_set') ) {
  putenv('TZ=' . $PICKEM_TIMEZONE);
  date_default_timezone_set($PICKEM_TIMEZONE);
}
else {
  putenv('TZ=' . $PICKEM_TIMEZONE);
}

global $PICKEM_MY_LEAGUES;
$PICKEM_MY_LEAGUES = array();

/**
 * Implementation of hook_help().
 */
 function pickem_help($section = "") {
  $output = '';
  switch ($section) {
    case 'admin/pickem':
      $output .= '<p>'. t("Here is some general information regarding how this module is set up.") .'</p><ul>';
      $output .= '<li>'. t("A game set is a collection of teams, weeks, and games.") .'</li>';
      $output .= '<li>'. t("Each league may only have one game set.") .'</li>';
      $output .= '<li>'. t("Each user may be a member of more than one league.") .'</li>';
      $output .= '<li>'. t("The weeks list controls when the pick cut-off occurs.") .'</li>';
      $output .= '</ul>';
      break;
    case 'admin/pickem/games/%':
      $output .= '<p>'. t('In order to add games, you need to have weeks and teams already entered.') .'</p>';
      break;
    case 'admin/pickem/games/%/edit/%':
      $output .= '<p>'. t('Although you may enter scores here, it is easier to use the admin/pickem/leagues screens.  Look for the scores links under leagues.') .'</p>';
      break;
    case 'admin/pickem/leagues':
      $output .= '<p>'. t('Manage your league list.  A league is a group of users who compete against each other.  They will share a standings page, a rules node, and a forum for chatting.') .'</p>';
      break;
    case 'admin/pickem/leagues/edit/%':
      $output .= '<p>'. t('If you want a chat forum and the selection box is empty, you\'ll need to enable the forum module and create a forum first.') .'</p>';
      break;
    case 'admin/pickem/picks':
      $output .= '<p>'. t('Here is where you can override a users picks at the descretion of the commisioner (special circumstances) Choose a league then choose a user and then proceed to the pick set.') .'</p>';
      break;
    case 'admin/pickem/scores/%':
      $output .= '<p>'. t('After each game/week, enter the scores here.  Click on a week number to update scores for that week.') .'</p>';
      break;
    case 'admin/pickem/teams':
      $output .= '<p>'. t('Manage the global team list.  This one table is used for all leagues.') .'</p>';
      $output .= '<p>'. t('NOTE: In most lists the abbrev is used first, but if empty, the name is used.') .'</p>';
      break;
    case 'admin/pickem/weeks':
      $output .= '<p>'. t('Weeks are numbered sequentially, starting at 1.  First Game Time is the field that locks users from changing their picks.  Make sure to fill that one out.<br/>Typical values for NFL would be 1, Week 1, WK1, 2008-11-12 12:00:00, 1') .'</p>';
      break;
  }
  return $output;
}

/*
 * Implementation of hook_init().
*/
function pickem_init() {
  global $PICKEM_MY_LEAGUES;
  $PICKEM_MY_LEAGUES = get_my_leagues();

  $stylesheet = drupal_get_path('theme', $GLOBALS['theme_key'] .'/pickem.css');
  if (!file_exists($stylesheet)) {
    $stylesheet = drupal_get_path('module', 'pickem') .'/pickem.css';
  }
  drupal_add_css($stylesheet);
}

/*
 * Implementation of hook_menu().
*/
function pickem_menu() {
  global $user;
  global $PICKEM_MY_LEAGUES;

  $items = array();

  $items['pickem'] = array(
    'title' => 'Pickem Leagues',
    'page callback' => 'league_router',
    'access arguments' => array('access pickem'),
    'type' => MENU_NORMAL_ITEM,
    'weight' => -10,
  );

  $items['pickem/%league'] = array(
    'page callback' => 'page_league',
    'page arguments' => array(1),
    'access arguments' => array('access pickem'),
    'type' => MENU_CALLBACK,
  );

  $items['pickem/%league/standings'] = array(
    'page callback' => 'page_standings',
    'page arguments' => array(1),
    'access arguments' => array('access pickem'),
    'type' => MENU_CALLBACK,
  );

  $items['pickem/%league/weeklypicks/%week'] = array(
    'title' => t('This Weeks Pick List'),
    'page callback' => 'page_weeklypicks',
    'page arguments' => array(1, 3),
    'access arguments' => array('access pickem'),
    'type' => MENU_CALLBACK,
  );

  $items['pickem/%league/grid'] = array(
    'title' => t('Schedule Grid'),
    'page callback' => 'page_grid',
    'page arguments' => array(1),
    'access arguments' => array('access pickem'),
    'type' => MENU_CALLBACK,
  );


  if (module_exists("open_flash_chart_api")) {
    // arg1 is league id
    $items['pickem/%league/chart1'] = array(
      'title' => t('Weekly High/Low Chart'),
      'page callback' => 'chart1',
      'page arguments' => array(1),
      'access arguments' => array('access pickem'),
      'type' => MENU_CALLBACK,
    );
    // arg1 is league id
    $items['pickem/%league/chart1/%user'] = array(
      'title' => t('Weekly High/Low Chart'),
      'page callback' => 'chart1',
      'page arguments' => array(1, 3),
      'access arguments' => array('access pickem'),
      'type' => MENU_CALLBACK,
    );

    $items['pickem/%league/chart2'] = array(
      'title' => t('Team Pickability'),
      'page callback' => 'chart2',
      'page arguments' => array(1),
      'access arguments' => array('access pickem'),
      'type' => MENU_CALLBACK,
    );
    $items['pickem/%league/chart2/%'] = array(
      'title' => t('Team Pickability'),
      'page callback' => 'chart2',
      'page arguments' => array(1, 3),
      'access arguments' => array('access pickem'),
      'type' => MENU_CALLBACK,
    );

    $items['pickem/%league/chart3/%'] = array(
      'title' => t('Team Points'),
      'page callback' => 'chart3',
      'page arguments' => array(1, 3),
      'access arguments' => array('access pickem'),
      'type' => MENU_CALLBACK,
    );

  }

  $items['pickem/%league/team_stats'] = array(
    'title' => t('Team Stats'),
    'page callback' => 'page_team_stats',
    'page arguments' => array(1),
    'access arguments' => array('access pickem'),
    'type' => MENU_CALLBACK,
  );

  $items['pickem/%league/mypicks'] = array(
    'page callback' => 'page_mypicks_all',
    'page arguments' => array(1),
    'access arguments' => array('play pickem'),
    'type' => MENU_CALLBACK,
  );

  $items['pickem/%league/mypicks/%week'] = array(
    'page callback' => 'page_mypicks_week',
    'page arguments' => array(1, 3),
    'access arguments' => array('play pickem'),
    'type' => MENU_CALLBACK,
  );

  // dynamic logo -> access content
  $items['pickem/random_logo.png'] = array(
    'title' => t('Team Logo'),
    'page callback' => 'stream_logo',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );






  /**
   *
   * admin menus, 'file' => 'pickem_admin.inc',
   *
   */
  $items['admin/pickem'] = array(
    'title' => 'Pickem',
    'description' => t('Run your own pickem leagues.'),
    'page callback' => 'pickem_overview_page',
    'access arguments' => array('administer pickem'),
    'type' => MENU_NORMAL_ITEM,
    'weight' => -10,
    'file' => 'pickem_admin.inc'
  );

  /*
   * Global Settings
   */
  $items['admin/pickem/global_settings'] = array(
    'title' => 'Global Settings',
    'description' => t('Configure global pickem settings.  Valid across all leagues.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pickem_settings'),
    'access arguments' => array('administer pickem'),
    'type' => MENU_NORMAL_ITEM,
    'weight' => -10,
    'file' => 'pickem_admin.inc'
  );


  /**
   * GAMESETS
   */
  $items['admin/pickem/gamesets'] = array(
    'title' => 'Game Sets',
    'description' => t('Manage the team list and game schedule.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pickem_gamesets_list'),
    'access arguments' => array('administer pickem'),
    'file' => 'pickem_admin.inc',
    'weight' => -2,
    'type' => MENU_NORMAL_ITEM
  );
  $items['admin/pickem/gamesets/list'] = array(
    'title' => 'List Game Sets',
    'weight' => -1,
    'type' => MENU_DEFAULT_LOCAL_TASK
  );
  $items['admin/pickem/gamesets/import'] = array(
    'title' => 'Import Game Set',
    'description' => t('Load teams and/or game schedules if you are lucky enough to have an import file.'),
    'page callback' => 'page_admin_data_import',
    'access arguments' => array('administer pickem'),
    'weight' => 1,
    'file' => 'pickem_admin.inc',
    'type' => MENU_LOCAL_TASK
  );
  $items['admin/pickem/gamesets/edit/%gameset'] = array(
    'title' => 'Edit Game Set',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pickem_gameset_edit', 'edit', 4),
    'access arguments' => array('administer pickem'),
    'file' => 'pickem_admin.inc',
    'type' => MENU_CALLBACK
  );
  $items['admin/pickem/gamesets/export/%gameset'] = array(
    'title' => 'Export Game Set',
    'page callback' => 'export_gameset',
    'page arguments' => array(4),
    'access arguments' => array('administer pickem'),
    'file' => 'pickem_admin.inc',
    'type' => MENU_CALLBACK
  );
  $items['admin/pickem/gamesets/delete/%gameset'] = array(
    'title' => 'Delete Game Set',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pickem_gameset_delete_confirm', 4),
    'access arguments' => array('administer pickem'),
    'file' => 'pickem_admin.inc',
    'type' => MENU_CALLBACK
  );

  /**
   * TEAMS, gets linked into the game sets list
   */
  $items['admin/pickem/teams/%gameset'] = array(
    'title' => 'Teams',
    'description' => t('Manage your global teams list.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pickem_teams_list', 3),
    'access arguments' => array('administer pickem'),
    'weight' => -1,
    'file' => 'pickem_admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/pickem/teams/%gameset/list'] = array(
    'title' => 'List Teams',
    'weight' => -1,
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/pickem/teams/%gameset/add'] = array(
    'title' => 'Add Team',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pickem_team_edit', 'add', 3, NULL),
    'access arguments' => array('administer pickem'),
    'file' => 'pickem_admin.inc',
    'weight' => 0,
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/pickem/teams/%gameset/edit/%team'] = array(
    'title' => 'Edit Team',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pickem_team_edit', 'edit', 3, 5),
    'access arguments' => array('administer pickem'),
    'file' => 'pickem_admin.inc',
    'type' => MENU_CALLBACK,
  );
  $items['admin/pickem/teams/%gameset/delete/%team'] = array(
    'title' => 'Delete Team',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pickem_team_delete_confirm', 3, 5),
    'access arguments' => array('administer pickem'),
    'file' => 'pickem_admin.inc',
    'type' => MENU_CALLBACK,
  );



  /**
   * WEEKS, gets linked into the game sets list
   */
  $items['admin/pickem/weeks/%gameset'] = array(
    'title' => t('Weeks'),
    'description' => t('Manage your weeks.  Used for weekly pick cutoff.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pickem_weeks_list', 3),
    'access arguments' => array('administer pickem'),
    'weight' => 1,
    'file' => 'pickem_admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
    $items['admin/pickem/weeks/%gameset/list'] = array(
      'title' => 'List Weeks',
      'weight' => -1,
      'type' => MENU_DEFAULT_LOCAL_TASK,
    );
    $items['admin/pickem/weeks/%gameset/add'] = array(
      'title' => 'Add Week',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('pickem_week_edit', 'add', 3, NULL),
      'access arguments' => array('administer pickem'),
      'file' => 'pickem_admin.inc',
      'weight' => 0,
      'type' => MENU_LOCAL_TASK,
    );
    $items['admin/pickem/weeks/%gameset/edit/%week'] = array(
      'title' => 'Edit Week',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('pickem_week_edit', 'edit', 3, 5),
      'access arguments' => array('administer pickem'),
      'file' => 'pickem_admin.inc',
      'type' => MENU_CALLBACK,
    );
    $items['admin/pickem/weeks/%gameset/delete/%week'] = array(
      'title' => 'Delete Week',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('pickem_week_delete_confirm', 3, 5),
      'access arguments' => array('administer pickem'),
      'file' => 'pickem_admin.inc',
      'type' => MENU_CALLBACK,
    );


  /**
   * GAMES, gets linked into the weeks list
   */
  $items['admin/pickem/games/%week'] = array(
    'title' => t('Games'),
    'description' => t('Manage your games (who plays who).'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pickem_games_list', 3),
    'access arguments' => array('administer pickem'),
    'weight' => -1,
    'file' => 'pickem_admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/pickem/games/%week/list'] = array(
    'title' => 'List Games',
    'weight' => -1,
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/pickem/games/%week/add'] = array(
    'title' => 'Add Game',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pickem_game_edit', 'add', 3, NULL),
    'access arguments' => array('administer pickem'),
    'file' => 'pickem_admin.inc',
    'weight' => 0,
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/pickem/games/%week/edit/%game'] = array(
    'title' => 'Edit Game',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pickem_game_edit', 'edit', 3, 5),
    'access arguments' => array('administer pickem'),
    'file' => 'pickem_admin.inc',
    'type' => MENU_CALLBACK,
  );
  $items['admin/pickem/games/%week/delete/%game'] = array(
    'title' => 'Delete Game',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pickem_game_delete_confirm', 3, 5),
    'access arguments' => array('administer pickem'),
    'file' => 'pickem_admin.inc',
    'type' => MENU_CALLBACK,
  );


  /**
   * LEAGUES
   */
  $items['admin/pickem/leagues'] = array(
    'title' => 'Leagues',
    'description' => t('Manage your leagues and assign users.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pickem_leagues_list'),
    'access arguments' => array('administer pickem'),
    'file' => 'pickem_admin.inc',
    'weight' => -2,
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/pickem/leagues/list'] = array(
    'title' => 'List Leagues',
    'weight' => -1,
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/pickem/leagues/add'] = array(
    'title' => 'Add League',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pickem_league_edit', 'add', NULL),
    'access arguments' => array('administer pickem'),
    'file' => 'pickem_admin.inc',
    'weight' => 0,
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/pickem/leagues/edit/%league'] = array(
    'title' => 'Edit League',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pickem_league_edit', 'edit', 4),
    'access arguments' => array('administer pickem'),
    'file' => 'pickem_admin.inc',
    'type' => MENU_CALLBACK,
  );
  $items['admin/pickem/leagues/delete/%league'] = array(
    'title' => 'Delete League',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pickem_league_delete_confirm', 4),
    'access arguments' => array('administer pickem'),
    'file' => 'pickem_admin.inc',
    'type' => MENU_CALLBACK,
  );


  /**
   * USERS, gets linked into the leagues list
   */
  $items['admin/pickem/users/%league'] = array(
    'title' => t('League User List'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pickem_users_list', 3),
    'access arguments' => array('administer pickem'),
    'file' => 'pickem_admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/pickem/users/%league/list'] = array(
    'title' => 'List Users',
    'weight' => -1,
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/pickem/users/%league/add'] = array(
    'title' => 'Add User',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pickem_users_add', 3),
    'access arguments' => array('administer pickem'),
    'file' => 'pickem_admin.inc',
    'weight' => 0,
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/pickem/users/%league/remove/%user'] = array(
    'title' => 'Remove User',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pickem_users_remove_confirm', 3, 5),
    'access arguments' => array('administer pickem'),
    'file' => 'pickem_admin.inc',
    'type' => MENU_CALLBACK,
  );


  /**
   * SCORES, gets linked into the league list
   */
  $items['admin/pickem/scores/%league'] = array(
    'title' => t('Scores List'),
    'description' => t('Enter scores'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pickem_scores_list', 3),
    'access arguments' => array('administer pickem'),
    'weight' => -1,
    'file' => 'pickem_admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/pickem/scores/%league/list'] = array(
    'title' => 'Scores List',
    'weight' => -1,
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/pickem/scores/%league/edit/%week'] = array(
    'title' => 'Edit Scores',
    'description' => t('Enter game scores as they happen.'),
    'page callback' => 'page_admin_scores',
    'page arguments' => array(3, 5),
    'access arguments' => array('administer pickem'),
    'weight' => 1,
    'file' => 'pickem_admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );







  /**
   * PICKS
   */
  $items['admin/pickem/picks'] = array(
    'title' => 'Picks',
    'description' => t('Fix user\'s picks.  Will you update a user\'s picks after the cutoff?'),
    'page callback' => 'admin_picks_router',
    'access arguments' => array('administer pickem'),
    'weight' => 1,
    'file' => 'pickem_admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/pickem/picks/%league'] = array(
    'title' => 'Picks',
    'page callback' => 'admin_picks_router',
    'page arguments' => array(3),
    'access arguments' => array('administer pickem'),
    'weight' => 1,
    'file' => 'pickem_admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/pickem/picks/%league/%user'] = array(
    'title' => 'Picks',
    'page callback' => 'admin_picks',
    'page arguments' => array(3, 4),
    'access arguments' => array('administer pickem'),
    'weight' => 1,
    'file' => 'pickem_admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/pickem/picks/%league/%user/%week'] = array(
    'title' => 'Picks',
    'page callback' => 'admin_picks_week',
    'page arguments' => array(3, 4, 5),
    'access arguments' => array('administer pickem'),
    'weight' => 1,
    'file' => 'pickem_admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );


  $items['admin/pickem/email_league'] = array(
    'title' => 'Send Email',
    'description' => t('Send mass emails to all pickem user\'s or just league members.'),
    'page callback' => 'page_admin_email_league',
    'access arguments' => array('administer pickem'),
    'weight' => 8,
    'file' => 'pickem_admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );


  return $items;
}

/**
 * Implementation of hook_user().
 */
function pickem_user($op, &$edit, &$account, $category = NULL) {
  switch ($op) {
    case 'insert':
      // a new user is being added; add them to the default league
      $auto_signup = variable_get('pickem_auto_signup_enable', 0);
      $default_league = variable_get('pickem_auto_signup_default_league', 0);
      if (  $auto_signup == 1 && $default_league != 0 ) {
        $query = "insert into {pickem_users} (uid, lid) values(%d, %d)";
        $result = db_query($query, $account->uid, $default_league);
        drupal_set_message($account->name .' added to default pickem league.');
      }
      $edit['pickem_user_email_reminders'] = variable_get('pickem_default_email_reminders', 1);
    break;
    case 'form':
      if ( $category == 'account') {
        $form['pickem'] = array('#type' => 'fieldset',
          '#title' => t('Pickem settings'),
          '#weight' => 5,
          '#collapsible' => TRUE,
        );

        $leagues = get_my_leagues();
        $options = array();
        foreach ($leagues as $l) {
          $options[$l->lid] = $l->name;
        }

        $form['pickem']['pickem_user_default_league'] = array(
          '#type' => 'select',
          '#title' => t('Default League'),
          '#default_value' => !empty($edit['pickem_user_default_league']) ? $edit['pickem_user_default_league'] : FALSE,
          '#description' => t('Show this league by default.'),
          '#options' => $options,
        );

        $form['pickem']['pickem_user_email_reminders'] = array(
          '#type' => 'checkbox',
          '#title' => t('Receive email reminders'),
          '#default_value' => !empty($edit['pickem_user_email_reminders']) ? $edit['pickem_user_email_reminders'] : FALSE,
          '#description' => t('Enable email reminders to be sent to you if you have not picked the current weeks games.'),
        );
        return $form;
      }
    break;
  }
}

/**
 * Implementation of hook_perm().
 */
function pickem_perm() {
  return array(
    'administer pickem',
    'play pickem',
    'access pickem'
  );
}

/**
 * Implementation of hook_cron().
 */
function pickem_cron() {

  $query = 'select pw.wid, pw.wk_firstgame, (UNIX_TIMESTAMP(pw.wk_firstgame) - UNIX_TIMESTAMP(CURDATE())) / 86400 as day_diff, pu.uid, l.lid, count(pp.pid) as picks, count(g.gid) as games FROM {pickem_games} g INNER JOIN {pickem_weeks} pw ON pw.wid=g.wid inner join {pickem_leagues} l on l.gsid=pw.gsid inner join {pickem_users} pu on pu.lid=l.lid left outer join {pickem_picks} pp on pp.uid=pu.uid and pp.lid=l.lid and pp.gid=g.gid where wk_firstgame > CURDATE() group by pw.wid, pw.wk_firstgame, pu.uid, l.lid order by wk_firstgame';
  $result = db_query($query, $wid);
  while ($row = db_fetch_object($result)) {
    // send a 0, 1, or 2 day warning
    if ($row->day_diff <= 2 && $row->day_diff >= 0 && $row->picks < $row->games) {
      $user = user_load(array('uid' => $row->uid));
      // send reminder if the user has reminders turned on.
      if ( $user->pickem_user_email_reminders == 1 ) {
        // check to see if they have already been reminded
        $lookup = db_fetch_object(db_query("SELECT id from {pickem_mail} where process_name='%s' and process_point='%s' and uid=%d and lid=%d", 'missing pick warning', floor($row->day_diff), $row->uid, $row->lid));
        if ( !$lookup->id ) {
          // add row to the pickem_email to prevent dups on next cron run
          db_query("INSERT INTO {pickem_mail} (process_name, process_point, uid, lid, email, sent) VALUES ('%s', '%s', %d, %d, '%s', now())", 'missing pick warning', floor($row->day_diff), $row->uid, $row->lid, $user->mail);
          // send email
          email_warning($user, $row->wid, $row->wk_firstgame, ($row->games - $row->picks) , $row->lid);
        }
      }
    }
  }
}




/**
 * Implementation of hook_theme()
 */
function pickem_theme() {
  return array(
    'pickem_scores_list' => array(
      'file' => 'pickem_admin.inc',
      'arguments' => array('form' => NULL),
    ),
    'pickem_gamesets_list' => array(
      'file' => 'pickem_admin.inc',
      'arguments' => array('form' => NULL),
    ),
    'pickem_leagues_list' => array(
      'file' => 'pickem_admin.inc',
      'arguments' => array('form' => NULL),
    ),
    'pickem_teams_list' => array(
      'file' => 'pickem_admin.inc',
      'arguments' => array('form' => NULL),
    ),
    'pickem_weeks_list' => array(
      'file' => 'pickem_admin.inc',
      'arguments' => array('form' => NULL),
    ),
    'pickem_games_list' => array(
      'file' => 'pickem_admin.inc',
      'arguments' => array('form' => NULL),
    ),
    'pickem_users_list' => array(
      'file' => 'pickem_admin.inc',
      'arguments' => array('form' => NULL),
    ),
    'league_nav' => array(
      'arguments' => array('league' => NULL),
    ),
    'my_league_summary' => array(
      'arguments' => array('league' => NULL),
    ),
    'league_messages' => array(
      'arguments' => array('league' => NULL),
    ),
    'leaderboard_block' => array(
      'arguments' => array('league' => NULL),
    ),
    'this_weeks_games_block' => array(
      'arguments' => array('league' => NULL),
    ),
    'dash' => array(
      'arguments' => array('title' => NULL, 'content' => NULL, 'region' => 'main', 'link' => NULL, ),
    ),
    'team_stats' => array(
      'arguments' => array('league' => NULL),
    ),
  );
}


/*
 * Menu Callbacks
 */
function page_grid($league) {
  drupal_set_title("Schedule Grid");

  $breadcrumb = drupal_get_breadcrumb();
  $breadcrumb[] = l($league->name, 'pickem/'. $league->lid);
  drupal_set_breadcrumb($breadcrumb);

  $output = '';

  if ( ($cache = cache_get('pickem_grid_scores-'. $league->gsid)) && !empty($cache->data) ) {
    drupal_add_js('misc/tableheader.js');
    $output = unserialize($cache->data);
  }
  else {
    $weeks = get_weeks(array('league_id' => $league->lid, 'playoffs' => 0));

    $header = array('&nbsp;');
    foreach ($weeks as $wid => $week) {
      $header[] = array('data' => $week->wk_number, 'title' => 'Week Number '. $week->wk_number);
    }

    $query = "SELECT g.gid, g.wid, h.tm_abbrev as home, v.tm_abbrev as visitor, g.h_score, g.v_score FROM {pickem_games} g inner join {pickem_teams} h on h.tid=g.h_id inner join {pickem_teams} v on v.tid=g.v_id order by wid";
    $result = db_query($query);

    $games = array();
    while ($row = db_fetch_object($result)) {
      if ($row->h_score > $row->v_score) {
        // Home Victory
        $games[$row->home][$row->wid] = array(
          "op" => $row->visitor,
          "w-l" => "win",
          "h-a" => "home",
          "score" => $row->h_score .'-'. $row->v_score
        );
        $games[$row->visitor][$row->wid] = array(
          "op" => $row->home,
          "w-l" => "loss",
          "h-a" => "away",
          "score" => $row->v_score .'-'. $row->h_score
        );
      }
      elseif ($row->v_score > $row->h_score) {
        // Visitor Victory
        $games[$row->home][$row->wid] = array(
          "op" => $row->visitor,
          "w-l" => "loss",
          "h-a" => "home",
          "score" => $row->h_score .'-'. $row->v_score
        );
        $games[$row->visitor][$row->wid] = array(
          "op" => $row->home,
          "w-l" => "win",
          "h-a" => "away",
          "score" => $row->v_score .'-'. $row->h_score
        );
      }
      elseif ($row->v_score == $row->h_score && $row->h_score <> "") {
        // TIE
        $games[$row->home][$row->wid] = array(
          "op" => $row->visitor,
          "w-l" => "tie",
          "h-a" => "home",
          "score" => $row->h_score .'-'. $row->v_score
        );
        $games[$row->visitor][$row->wid] = array(
          "op" => $row->home,
          "w-l" => "tie",
          "h-a" => "away",
          "score" => $row->v_score .'-'. $row->h_score
        );
      }
      else {
        // TBD, game not played
        $games[$row->home][$row->wid] = array(
          "op" => $row->visitor,
          "w-l" => "tbd",
          "h-a" => "home",
          "score" => 'N/A'
        );
        $games[$row->visitor][$row->wid] = array(
          "op" => $row->home,
          "w-l" => "tbd",
          "h-a" => "away",
          "score" => 'N/A'
        );
      }
    }
    ksort($games);


    $output = '<div class="pickem">Hover over completed game for the score.';

    $rows = array();
    foreach ($games as $tm => $teamsgames) {
      ksort($teamsgames);
      $row = array();
      $row[] = array('data' => $tm, 'class' => 'team_head');
      foreach ($weeks as $w => $w_data) {
        if (isset ($teamsgames[$w])) {
          $class .= $teamsgames[$w]["h-a"];
          $class .= " ". $teamsgames[$w]["w-l"];
          if ($teamsgames[$w]["h-a"] == "away") {
            $teamsgames[$w]["op"] = '@'. $teamsgames[$w]["op"];
          }
          $row[] = array('data' => $teamsgames[$w]["op"], 'class' => $teamsgames[$w]["w-l"], 'title' => strtoupper($teamsgames[$w]["w-l"]) .' '. $teamsgames[$w]["score"]);
        }
        else {
          if ($w_data->playoffs == 1) {
            // playoffs, blank, used for teams that didn't make the playoffs
            $row[] = '&nbsp;';
          }
          else {
            // bye week
            $row[] = array('data' => 'bye', 'class' => 'bye', 'title' => 'Bye Week');
          }
        }
      }
      $rows[] = $row;
    }

    $output .= theme('table', $header, $rows, array('class' => 'grid'));
    $output .= '</div>';

    cache_set('pickem_grid_scores-'. $league->gsid, serialize($output));
  }

  print theme('page', $output);
}

function page_mypicks_week($league, $week) {
  global $user, $PICKEM_TIMEZONE;

  // param check: valid league which has this week
  if ( bad_league_week($league, $week) ) {
    return drupal_not_found();
  }

  drupal_set_title($week->wk_name .' Picks - '. $user->name);

  // setup breadcrumbs
  $breadcrumb = drupal_get_breadcrumb();
  $breadcrumb[] = l($league->name, 'pickem/'. $league->lid);
  drupal_set_breadcrumb($breadcrumb);

  // used to saving to multiple leagues that use the same pickset.
  $similar_leagues = get_my_leagues($league->gsid);

  //POSTING, save picks
  if (count($_POST) > 0) {
    if ($week->week_past == 1) {
      drupal_set_title($week->wk_name .' picks are locked.');
      print theme('page', "You cannot change your picks now.");
      return;
    }

    $type = "";
    if ( isset($_POST['apply_to_all_my_leagues'] ) ) {
      unset($_POST['apply_to_all_my_leagues']);
      foreach ($similar_leagues as $l) {
        foreach ($_POST as $gid => $pick) {
          $gid = preg_split('/_/', $gid);
          set_pick($gid[1], $user->uid, $l->lid, $pick);
        }
      }
      drupal_set_message("Picks: saved for all leagues");
      watchdog('pickem', 'Picks saved(all) for <i>'. $user->name .'</i>, week '. $week->wk_name .'.');

    }
    else {
      foreach ($_POST as $gid => $pick) {
        $gid = preg_split('/_/', $gid);
        set_pick($gid[1], $user->uid, $league->lid, $pick);
      }
      drupal_set_message("Picks: saved");
      watchdog('pickem', 'Picks saved for <i>'. $user->name .'</i>, week '. $week->wk_name .'.');
    }
  }

  $teams = get_teams(array('gameset_id' => $league->gsid));
  $games = get_games(array('week_id' => $week->wid));
  $picks = get_picks(array('league_id' => $league->lid, 'user_id' => $user->uid, 'week_id' => $week->wid));

  $output = '<div class="pickem"><form action="" method="post"><table class="picks">';
  if ($league->scoring_type == 0) {
    $output .= "<tr><th>Visitor</th><th>Home</th><th>Game Time($PICKEM_TIMEZONE)</th></tr>";
  }
  else if ($league->scoring_type == 1) {
    $output .= "<tr><th>Visitor</th><th>VSpread</th><th>Home</th><th>HSpread</th><th>Game Time($PICKEM_TIMEZONE)</th></tr>";
  }

  foreach ($games as $gid => $game) {
    $v_sel = '';
    $h_sel = '';
    if ($picks[$gid][$user->uid]->winnerpick_id == $game->v_id) {
      $v_sel = "checked";
    }
    elseif ($picks[$gid][$user->uid]->winnerpick_id == $game->h_id) {
      $h_sel = "checked";
    }

    if ($week->week_past == 0) {
      $output .= '<tr>';
      $output .= '<td><input type="radio" name="gid_'. $gid .'" value="'. $game->v_id .'" '. $v_sel .'/> &nbsp;' . $teams[$game->v_id]->small_logo_img . $teams[$game->v_id]->short_name .'</td>';
      if ($league->scoring_type == 1) {
        $output .= '<td>'. $game->v_spread .'</td>';
      }
      $output .= '<td><input type="radio" name="gid_'. $gid .'" value="'. $game->h_id .'" '. $h_sel .'/> &nbsp;' . $teams[$game->h_id]->small_logo_img . $teams[$game->h_id]->short_name .'</td>';
      if ($league->scoring_type == 1) {
        $output .= '<td>'. $game->h_spread .'</td>';
      }
    }
    else {
      $output .= '<tr>';
      if ($picks[$gid][$user->uid]->winnerpick_id == $game->v_id) {
        $output .= '<td><div class="picks-align picked">'.$teams[$game->v_id]->small_logo_img.'<b>'. $teams[$game->v_id]->short_name .' &radic;</b></div></td>';
        if ($league->scoring_type == 1) {
          $output .= '<td>'. $game->v_spread .'</td>';
        }
      }
      else {
        $output .= '<td><div class="picks-align">'.$teams[$game->v_id]->small_logo_img. $teams[$game->v_id]->short_name .'</div></td>';
        if ($league->scoring_type == 1) {
          $output .= '<td>'. $game->v_spread .'</td>';
        }
      }

      if ($picks[$gid][$user->uid]->winnerpick_id == $game->h_id) {
        $output .= '<td><div class="picks-align picked">'.$teams[$game->h_id]->small_logo_img.'<b>'. $teams[$game->h_id]->short_name .' &radic;</b></div></td>';
        if ($league->scoring_type == 1) {
          $output .= '<td>'. $game->h_spread .'</td>';
        }
      }
      else {
        $output .= '<td><div class="picks-align">'.$teams[$game->h_id]->small_logo_img . $teams[$game->h_id]->short_name .'</div></td>';
        if ($league->scoring_type == 1) {
          $output .= '<td>'. $game->h_spread .'</td>';
        }
      }
    }
    if (isset ($picks[$gid][$user->uid])) {
      $output .= '<td class="pick">'. $game->gametime .'</td></tr>';
    }
    else {
      $output .= '<td class="nopick">'. $game->gametime .'</td></tr>';
    }
  }
  $output .= '</table>';

  if ($week->week_past == 0 ) {
    if ( count($similar_leagues) > 1 ) {
      $output .= '<input type="checkbox" name="apply_to_all_my_leagues">Apply picks to all my leagues that use the same game set<br/><br/>';
    }
    $output .= '<input type="submit" value="Save Picks"/>';
  }
  $output .= '</form></div>';


  print theme('page', $output);
}

function page_mypicks_all($league) {
  global $PICKEM_MY_LEAGUES;
  global $user;

  drupal_set_title("My Picks - ". $user->name);

  $breadcrumb = drupal_get_breadcrumb();
  $breadcrumb[] = l($league->name, 'pickem/'. $league->lid);
  drupal_set_breadcrumb($breadcrumb);

  $flip = array('even' => 'odd', 'odd' => 'even');
  $class = 'even';

  $teams = get_teams(array('gameset_id' => $league->gsid));

  //global $debug;
  //$debug=1;

  $games = get_games(array('league_id' => $league->lid));

  $output = '<div class="pickem">Click on week number to make picks.<table class="picks">';

  $last_week_id = 0;
  foreach ($games as $gid => $game) {
    if ( $game->wid <> $last_week_id ) {
      $class = $flip[$class];
      $output .= '<tr class="'. $class .'"><th>'. l($game->wk_number, "pickem/$league->lid/mypicks/" . $game->wid) .'</th><td>';
    }
    $last_week_id = $game->wid;
    $output .= '<div class="picks-float">';
    $output .= $teams[$game->v_id]->short_name .'<br/>@'. $teams[$game->h_id]->short_name;
    $output .= "</div>";
  }
  $output .= "</td></tr>";

  $output .= "</table></div>";

  print theme('page', $output);
}

function page_weeklypicks($league, $week) {
  global $user;

  $breadcrumb = drupal_get_breadcrumb();
  $breadcrumb[] = l($league->name, 'pickem/'. $league->lid);
  drupal_set_breadcrumb($breadcrumb);

  $flip = array('even' => 'odd', 'odd' => 'even');
  $class = 'even';


  $output = '<div class="pickem">Sorted by this week\'s scores<table><tr><th>&nbsp;</th>';
  $gids = array();
  $teams = get_teams(array('gameset_id' => $league->gsid));
  $weeks = get_weeks(array('week_id' => $week->wid));
  $games = get_games(array('week_id' => $week->wid));
  foreach ($games as $gid => $g_data) {
    $output .= '<th>'. $teams[$g_data->v_id]->tm_abbrev ."<br/>@". $teams[$g_data->h_id]->tm_abbrev .'</th>';
    if ( $g_data->h_score == NULL ) {
      $gids[$gid] = 0;  // game not played
    }
    elseif ($g_data->h_score == $g_data->v_score) {
      $gids[$gid] = -1; // game ended in tie
    }
    elseif ($g_data->h_score > $g_data->v_score) {
      $gids[$gid] = $g_data->h_id;
    }
    elseif ($g_data->v_score > $g_data->h_score) {
      $gids[$gid] = $g_data->v_id;
    }
  }
  $output .= '</tr>';

  $totals = get_user_totals($league, $week_id); //sorted by overall score
  $picks = get_picks( array('league_id' => $league->lid, 'week_id' => $week->wid) );

  foreach ($totals as $uid => $user_totals) {
    $class=$flip[$class];
    $output .= '<tr class="'. $class .'"><td class="users">'. l($user_totals['name'], 'user/'. $uid) .'</td>';
    foreach ($gids as $gid => $winnerid) {
      $p_team = $teams[$picks[$gid][$uid]->winnerpick_id]->short_name;

      if (isset ($picks[$gid][$uid]->winnerpick_id) && $picks[$gid][$uid]->winnerpick_id == $winnerid && $winnerid != 0) {
        $output .= '<td class="win">'. $p_team .'</td>';
      }
      elseif (isset ($picks[$gid][$uid]->winnerpick_id) && $winnerid == -1) {
        $output .= '<td class="tie">'. $p_team .'</td>';
      }
      elseif (isset ($picks[$gid][$uid]->winnerpick_id) && $picks[$gid][$uid]->winnerpick_id != $winnerid && $winnerid != 0) {
        $output .= '<td class="loss">'. $p_team .'</td>';
      }
      else {
        if ($week->week_past == 1 || $uid == $user->uid) {
          $output .= '<td>'. $p_team .'</td>';
        }
        else {
          if (isset ($picks[$gid][$uid]->winnerpick_id)) {
            $output .= '<td>X</td>';
          }
          else {
            $output .= '<td>&nbsp;</td>';
          }
        }
      }
    }
    $output .= '</tr>';
  }

  $output .= '</table></div>';

  drupal_set_title($week->wk_name .' Pick Summary');
  print theme('page', $output);
}

function page_standings($league) {
  drupal_set_title("Standings");

  $breadcrumb = drupal_get_breadcrumb();
  $breadcrumb[] = l($league->name, 'pickem/'. $league->lid);
  drupal_set_breadcrumb($breadcrumb);

  drupal_add_js('misc/collapse.js');

  $totals = get_user_totals($league);
  $week_totals = get_totals_by_week($league);

  $flip = array('even' => 'odd', 'odd' => 'even');
  $class = 'even';

  $output = '<div class="pickem">Click on week numbers to see weekly pick summary.';
  $output .= '<div><fieldset class="collapsible"><legend><a href="#">Regular Season</a></legend>';
  $output .= '<table class="standings"><tr><th>&nbsp;</th>';

  $wk_summary = array();
  $output .= '<th colspan="2">TOT</th>';
  $weeks = get_weeks(array('gameset_id' => $league->gsid, 'playoffs' => 0));
  foreach ($weeks as $wid => $week) {
    $output .= '<th class="week-numbers">'. l($week->wk_number, 'pickem/'. $league->lid ."/weeklypicks/$wid") .'</th>';
  }
  $output .= "</tr>";

  foreach ($totals as $uid => $u_object) {
    $class = $flip[$class];
    $output .= '<tr class="'. $class .'">';
    $output .= '<th>'. $u_object['ranking'] .'.&nbsp;&nbsp;'. l($u_object['name'], 'user/'. $uid) .'</th>';

    if ($u_object['pts_back'] == 0) {
      $output .= '<td>'. $u_object['total'] .'</td><td>&nbsp;</td>';
      $high = $u_object['total'];
    }
    else {
      $output .= '<td>'. $u_object['total'] .'</td><td>+'. $u_object['pts_back'] .'</td>';
    }

    foreach ($weeks as $wid => $week) {
      if ($u_object['weeks'][$wid] == $week_totals[$wid]["min"]) {
        $output .= '<td class="weekly-low">'. $u_object['weeks'][$wid] .'</td>';
      }
      else if ($u_object['weeks'][$wid] == $week_totals[$wid]["max"]) {
        $output .= '<td class="weekly-high">'. $u_object['weeks'][$wid] .'</td>';
      }
      else {
        $output .= '<td>'. $u_object['weeks'][$wid] .'</td>';
      }
    }
    $output .= "</tr>";
  }
  $output .= '</table></fieldset></div>';

  //playoff table
  $playoff_weeks = get_weeks(array('gameset_id' => $league->gsid, 'playoffs' => 1));
  $output .= '<div><fieldset class="collapsible"><legend><a href="#">Playoffs</a></legend>';
  $output .= '<table class="standings">';

  $output .= '<tr><th>&nbsp;</th><th colspan="2">TOT</th>';
  foreach ($playoff_weeks as $wid => $week) {
    $output .= '<th class="week-numbers">'. l('Week&nbsp;'. $week->wk_number .'<br/>'. $week->wk_name, 'pickem/'. $league->lid ."/weeklypicks/$wid", array('html' => TRUE)) .'</th>';
  }
  $output .= "</tr>";
  foreach ($totals as $uid => $u) {
    $class = $flip[$class];
    $output .= '<tr class="'. $class .'">';
    $output .= '<th>'. $u['ranking'] .'.&nbsp;&nbsp;'. l($u['name'], 'user/'. $uid) .'</th>';

    if ($u['pts_back'] == 0) {
      $output .= '<td>'. $u['total'] .'</td><td>&nbsp;</td>';
      $high = $u['total'];
    }
    else {
      $output .= '<td>'. $u['total'] .'</td><td>+'. $u['pts_back'] .'</td>';
    }
    foreach ($playoff_weeks as $wid => $week) {
      if ($u['weeks'][$wid] == $week_totals[$wid]["min"]) {
        $output .= '<td class="weekly-low">'. $u['weeks'][$wid] .'</td>';
      }
      else if ($u['weeks'][$wid] == $week_totals[$wid]["max"]) {
        $output .= '<td class="weekly-high">'. $u['weeks'][$wid] .'</td>';
      }
      else {
        $output .= '<td>'. $u['weeks'][$wid] .'</td>';
      }
    }
    $output .= "</tr>";
  }
  $output .= '</table></fieldset></div>';

  $output .= '</div>';
  print theme('page', $output);
}


function league_router() {
  global $PICKEM_MY_LEAGUES;
  global $user;

  if ( isset($user->pickem_user_default_league) ) {
    drupal_goto("pickem/" . $user->pickem_user_default_league);
  }

  if ( count($PICKEM_MY_LEAGUES) >= 1 ) {
    drupal_goto("pickem/" . $PICKEM_MY_LEAGUES[0]->lid);
  }

  drupal_set_title("Choose League to View");
  $o = get_all_league_switcher();
  print theme('page', $o);
}

function page_league($league) {
  drupal_set_title($league->name .' League');

  $breadcrumb = drupal_get_breadcrumb();
  $breadcrumb[1] = l($league->name, 'pickem/'. $league->lid);
  drupal_set_breadcrumb($breadcrumb);

  $o  = '<div class="pickem"><table class="league-nav"><tr>';
  $o .= '<td class="col1">'. theme('league_nav', $league) .'</td>';
  if ( is_my_league($league) ) {
    $o .= '<td class="col2">'. theme('my_league_summary', $league) .'</td>';
  }
  else {
    $o .= '<td class="col2">&nbsp;</td>';
  }
  $o .= '</tr>';

  $o .= '<tr><td colspan="2">'. theme('league_messages', $league) .'</td></tr>';

  $o .= '<tr><td colspan="2">'. theme('this_weeks_games') .'</td></tr></table></div>';


  print theme('page', $o);
}

function theme_league_nav($league) {
    global $user;

    $o = '';
    $o .=  '<ul>';
    if ( is_my_league($league) ) {
      $o .= '<li>'. l('My Picks', 'pickem/'. $league->lid .'/mypicks') .'</li>';
    }

    $cur_w = get_current_week($league, FALSE);
    if ($cur_w->wk_number <> '') {
      $o .= '<li>'. l('Pick Summary(week '. $cur_w->wk_number .')', 'pickem/'. $league->lid .'/weeklypicks/'. $cur_w->wid) .'</li>';
    }
    else {
      //print_r($cur_w);
    }

    $o .= '<li>'. l('Standings', 'pickem/'. $league->lid .'/standings') .'</li>';

    if ( $league->rules_node_id != 0 ) {
      $o .= '<li>'. l('Rules and Regs', 'node/'. $league->rules_node_id) .'</li>';
    }

    if ( $league->forum_id != 0 ) {
      $o .= '<li>'. l('Talk and Taunting', 'forum/'. $league->forum_id) .'</li>';
    }

    if ( user_access('administer pickem') && $cur_w->wk_number <> '' ) {
      $o .= '<li>'. l('Update Week\'s Scores', 'admin/pickem/scores/'. $league->lid . '/edit/' . $cur_w->wid) .'</li>';
    }

    $o .= '<li>Research<ul>';
    if ( $league->partial_league == 0 ) {
      $o .= '<li>'. l('Schedule Grid', 'pickem/'. $league->lid .'/grid') .'</li>';
    }
    if (module_exists("open_flash_chart_api")) {
      $o .= '<li>'. l('High/Low Chart', 'pickem/'. $league->lid .'/chart1') .'</li>';
      if ( $league->partial_league == 0 ) {
        $o .= '<li>'. l('Team Pickability Chart', 'pickem/'. $league->lid .'/chart2') .'</li>';
      }
    }
    if ( $league->partial_league == 0 ) {
      $o .= '<li>'. l('Team Win-Loss Stats', 'pickem/'. $league->lid .'/team_stats') .'</li>';
    }

    $o .= '</ul></li></ul>';

    return theme('dash', 'Navigation', $o);
}

function theme_my_league_summary($league) {
  //drupal_set_message('theme_my_league_summary');
  global $user;

  $totals = get_user_totals($league); //sorted by overall score
  $title = 'My Summary';
  $content = '<div class="my-league-summary">';
  $content .= 'RANK: #'. $totals[$user->uid]['ranking'] .'<br/>';
  if ( $totals[$user->uid]['ranking'] > 1 ) {
    $content .= 'POINTS BACK: '. $totals[$user->uid]['pts_back'] .'<br/>';
  }
  $content .= 'TOTAL POINTS: '. $totals[$user->uid]['total'] .'<br/>';
  if ( $totals[$user->uid]['best_week_id'] <> -1 ) {
    $content .= 'BEST WEEK SCORE:  '. $totals[$user->uid]['weeks'][$totals[$user->uid]['best_week_id']] .' (Week '. $totals[$user->uid]['best_week_id'] .')<br/>';
    $content .= 'WORST WEEK SCORE:  '. $totals[$user->uid]['weeks'][$totals[$user->uid]['worst_week_id']] .' (Week '. $totals[$user->uid]['worst_week_id'] .')<br/>';
  }
  $content .= '</div>';
  return theme('dash', $title, $content);
}


function theme_league_messages($league) {
  global $user;
  global $PICKEM_TIMEZONE;

  if ( is_my_league($league) && $league->forum_id != 0 ) {
    $post_link = '/node/add/forum/'. $league->forum_id;
    $output = '<a href="'. $post_link .'">Post new forum topic.</a>';
  }
  $output .= '<ul>';
  $cur_w = get_current_week($league, TRUE);

  if ( $cur_w->firstgame_date != '' ) {
    if ( $cur_w->firstgame_dow <> "Sunday" ) {
      $output .= '<li class="warning">Warning: The first game is on <span style="text-decoration:underline;">'. strtoupper($cur_w->firstgame_dow) .'</span>.</li>';
    }
    if (module_exists("countdowntimer")) {
      $output .= '<li class="warning">'. get_countdown_timer($cur_w) .'</span></li>';
    } else {
      $output .= '<li class="warning">Week '. ($cur_w->wk_number) .' picks due by '. date('l, F j, Y \a\t g:i a',strtotime($cur_w->firstgame)) . '(' . $PICKEM_TIMEZONE.").</li>";
    }
  }


  if ( is_my_league($league) && $league->forum_id != 0 ) {
    $sql = db_rewrite_sql("SELECT n.nid, n.title, l.comment_count, l.last_comment_timestamp, u.name, c.cid, c.comment, c.subject comment_subject, cu.name comment_name, c.timestamp comment_timestamp FROM {node} n INNER JOIN {node_comment_statistics} l ON n.nid = l.nid inner join {users} u on u.uid=n.uid inner join {term_node} tn on tn.nid=n.nid left outer join {comments} c on c.nid=n.nid left outer join {users} cu on cu.uid=c.uid WHERE n.status = 1 AND n.type = 'forum' and tn.tid=%d ORDER BY GREATEST(n.created, c.timestamp) DESC");
    $result = db_query($sql, $league->forum_id);

    $i = 1;
    $content='';
    while ($node = db_fetch_object($result)) {
      if ( $i > 4 ) {
        break;
      }
      $i++;
      if ( $node->comment ) {
        $content .= '<li>'. l($node->comment_subject .' - '. $node->comment_name .' <Re: '. $node->title .'>', 'node/'. $node->nid  )  .  ' ('. format_date($node->comment_timestamp, 'small') .') <a href="/comment/reply/'. $node->nid .'/'. $node->cid .'">-Reply</a></li>';
      }
      else {
        $content .= '<li>'. l($node->title .' - '. $node->name, 'node/'. $node->nid  )  .' ('. format_date($node->last_comment_timestamp, 'small') .') <a href="/comment/reply/'. $node->nid .'/#comment-form">-Reply</a></li>';
      }
    }

    if ( $content == '' ) {
      $content = "<li>None</li>";
    }

    $output .= $content;
  }
  $output .= '</ul>';

  return theme('dash', 'Messages', $output);
}

function theme_dash($title, $content, $region='main', $link=NULL) {
  if ( isset($link) ) {
    $output = '<div class="dash"><div class="title">'. $link .'</div><div>'. $content .'</div></div>';
  }
  else {
    $output = '<div class="dash"><div class="title">'. $title .'</div><div>'. $content .'</div></div>';
  }
  return $output;
}

function theme_leaderboard_block($league) {
  if ( !isset($league) ) {
    return '';
  }
  $totals = get_user_totals($league); //sorted by overall score
  $content = '<table class="pickem-league-leaders">';
  $how_many = 10;
  $i = 0;
  foreach ($totals as $uid => $totalinfo) {
    $u_name = str_replace(' ', '&nbsp;', $totalinfo['name']);
    $content .= '<tr><td class="score">'. $totalinfo['total'] .'</td><td class="user"><a href="/user/'. $uid .'">'. $u_name .'</a></td></tr>';
    $i++;
    if ( $i >= $how_many ) {
      break;
    }
  }
  $content .= '</table>';
  return $content;
}

function theme_this_weeks_games_block($league) {
  $cur_w = get_current_week($league, FALSE);
  if ( $cur_w->wid == "" ) {
    return '';
  }

  $teams = get_teams(array('gameset_id' => $league->gsid));
  $games = get_games(array('week_id' => $cur_w->wid));
  $picked = get_team_totals($league, 'win_lose', $cur_w->wid);

  $content = '<table class="pickem-weeks-games">';
  foreach ($games as $gid => $row) {
      $v_perc = ($picked[$row->v_id]['picked_perc'] <> '') ? '('. $picked[$row->v_id]['picked_perc'] .'%)' : '';
      $h_perc = ($picked[$row->h_id]['picked_perc'] <> '') ? '('. $picked[$row->h_id]['picked_perc'] .'%)' : '';
      $content .= '<tr><td class="team">'. $teams[$row->v_id]->short_name .'&nbsp;'. $v_perc .'</td><td class="score">'. $row->v_score .'</td><td class="team">'. $teams[$row->h_id]->short_name .'&nbsp;'. $h_perc .'</td><td class="score">'. $row->h_score .'</td></tr>';
  }
  $content .= '</table>';
  return $content;
}

function page_team_stats($league) {
  drupal_set_title('Team Stats');

  $breadcrumb = drupal_get_breadcrumb();
  $breadcrumb[] = l($league->name, 'pickem/'. $league->lid);
  drupal_set_breadcrumb($breadcrumb);

  $o = '<div class="pickem">'. theme('team_stats', $league) .'</div>';

  print theme('page', $o);
}

function theme_team_stats($league) {
  $teams = get_teams(array('gameset_id' => $league->gsid));
  foreach ($teams as $tid => $team) {
    $team->wins = 0;
    $team->losses = 0;
    $team->ties = 0;
    $team->games_played = 0;
    $team->home_wins = 0;
    $team->home_losses = 0;
    $team->vis_wins = 0;
    $team->vis_losses = 0;
    $team->win_percent = 0.0;
    $team->pts_for = 0;
    $team->pts_against = 0;
  }

  $games = get_games(array('gameset_id' => $league->gsid));
  foreach ($games as $gid => $game) {
    if ( ! isset($game->h_score) || ! isset($game->v_score) ) {
      continue;
    }

    if ( $game->h_score > $game->v_score ) {
      $teams[$game->h_id]->wins++;
      $teams[$game->h_id]->home_wins++;
      $teams[$game->v_id]->losses++;
      $teams[$game->v_id]->vis_losses++;
    }
    elseif ( $game->h_score < $game->v_score ) {
      $teams[$game->v_id]->wins++;
      $teams[$game->v_id]->vis_wins++;
      $teams[$game->h_id]->losses++;
      $teams[$game->h_id]->home_losses++;
    }
    elseif ( $game->h_score == $game->v_score ) {
      $teams[$game->v_id]->ties++;
      $teams[$game->h_id]->ties++;
    }

    $teams[$game->h_id]->games_played++;
    $teams[$game->v_id]->games_played++;

    if ( $teams[$game->h_id]->wins + $teams[$game->h_id]->losses > 0 ) {
      $teams[$game->h_id]->win_percent = $teams[$game->h_id]->wins / ( $teams[$game->h_id]->wins + $teams[$game->h_id]->losses );
    }

    if ( $teams[$game->v_id]->wins + $teams[$game->v_id]->losses > 0 ) {
      $teams[$game->v_id]->win_percent = $teams[$game->v_id]->wins / ( $teams[$game->v_id]->wins + $teams[$game->v_id]->losses );
    }

    $teams[$game->v_id]->pts_for += $game->v_score;
    $teams[$game->v_id]->pts_against += $game->h_score;

    $teams[$game->h_id]->pts_for += $game->h_score;
    $teams[$game->h_id]->pts_against += $game->v_score;

  }

  // sort
  uasort($teams, "sort_team_stats");
  // render team data

  $rows = array();
  foreach ($teams as $tid => $team) {

    $team_link = $teams[$tid]->long_name;

    if (module_exists("open_flash_chart_api")) {
      $team_link = l($team_link, 'pickem/'. $league->lid .'/chart3/'. $tid);
    }

    $rows[] = array(
      array('data' => $team_link),
      array('data' => $teams[$tid]->wins, 'style' => 'width:20px;'),
      array('data' => $teams[$tid]->losses, 'style' => 'width:20px;'),
      array('data' => $teams[$tid]->ties, 'style' => 'width:20px;'),
      array('data' => sprintf("%.3F", $teams[$tid]->win_percent), 'style' => 'width:55px;'),

      array('data' => $teams[$tid]->pts_for, 'style' => 'width:20px;'),
      array('data' => $teams[$tid]->pts_against, 'style' => 'width:20px;'),

      array('data' => $teams[$tid]->home_wins .'-'. $teams[$tid]->home_losses, 'style' => 'width:58px;'),
      array('data' => $teams[$tid]->vis_wins .'-'. $teams[$tid]->vis_losses, 'style' => 'width:58px;'),

      );
  }

  $header = array(t('Team'), t('W'), t('L'), t('T'), t('PCT'), t('PF'), t('PA'), t('HOME'), t('ROAD'));

  $o = theme('table', $header, $rows, array('style' => '100%;') );

  return $o;
}

function sort_team_stats($a, $b) {
  if ($a->win_percent > $b->win_percent) {
    return -1;
  }
  else if ($a->win_percent < $b->win_percent) {
    return 1;
  }
  else {
   return 0;
  }
}


function stream_logo() {
  header("content-type: image/png");

  $full_path = drupal_get_path('module', 'pickem') .'/logos';
  $files = array();
  if ( $dir = opendir($full_path) ) {
    while (false !== ($file = readdir($dir))) {
      if (preg_match("/100\.png$/", "$file")) {
        $files[] = $file;
      }

    }
    closedir($dir);
  }
  print file_get_contents($full_path .'/'. $files[array_rand($files)]);
}


function chart1($league, $user=NULL) {
  drupal_set_title('Charts');

  $breadcrumb = drupal_get_breadcrumb();
  $breadcrumb[] = l($league->name, 'pickem/'. $league->lid);
  drupal_set_breadcrumb($breadcrumb);

  $g = new open_flash_chart_api();

  if ( isset($user) ) {
    $g->set_title( $user->name .': '. t('Weekly Points High/Low Chart'), '{font-size: 20px;}' );
  }
  else {
    $g->set_title( t('Weekly Points High/Low Chart'), '{font-size: 20px;}' );
  }

  $g->set_width('100%');
  $g->set_height('480');

  $weeks = get_totals_by_week($league);

  $b = array();
  foreach ($weeks as $w) {
    if ( $w['count'] == '' ) {
      $b[] = 'null';
    }
    else {
      $b[] = $w['total'] / $w['count'];
    }
  }
  $g->set_data($b);
  $g->line_dot( 2, 4, '#008000', 'League AVG', 12 );

  if ( isset($user) ) {
    $ut = get_user_totals($league);
    $c = array();
    foreach ($weeks as $w) {
      if ( $ut[$user->uid]['weeks'][$w['name']] == '' ) {
        $c[] = 'null';
      }
      else {
        $c[] = $ut[$user->uid]['weeks'][$w['name']];
      }
    }
    $g->set_data($c);
    $g->line_hollow( 2, 5, '#000080', $ut[$user->uid]['name'], 12 );
  }

   $a = array();
  foreach ($weeks as $w) {
    if ( $w['max'] == '' ) {
      $a[] = new candle('null', 'null', 'null', 'null');
    }
    else {
      $a[] = new candle($w['max'], $w['min'], $w['max'], $w['min']);
    }
  }
  $g->candle( $a, 70, 1, '#800000', 'High/Low', 12 );


  // X axis:
  $x_labels = array();
  $weeks = get_weeks(array('gameset_id' => $league->gsid, 'playoffs' => -1));
  foreach ($weeks as $wid => $week) {
    $x_labels[] = $week->wk_number;
  }
  $g->set_x_labels( $x_labels );
  $g->set_x_legend( 'Week', 12);

  $g->set_y_max( 16 );
  $g->y_label_steps( 8 );
  $g->set_y_legend( 'Points', 12);

  $g->set_bg_colour('0xDFFFDF');
  //echo $g->render();

  $g->set_tool_tip( '#x_legend# #x_label# (#val#)' );

  $o = '<div class="pickem">'. $g->render('js');

  $users = get_users($league);
  foreach ($users as $u) {
    $o .= '<span class="user-list-horiz">';
    $name = $u->name;
    $name = str_replace(' ', '&nbsp;', $name);
    if ( $user->uid == $u->uid ) {
      $o .= $name;
    }
    else {
      $o .= l($name, 'pickem/'. $league->lid .'/chart1/'. $u->uid, array('html' => TRUE));
    }
    $o .= '</span>';
  }
  $o .= '</div>';
  print theme('page', $o);

}



function chart2($league, $sort_by='win_lose') {
  drupal_set_title('Charts');

  $breadcrumb = drupal_get_breadcrumb();
  $breadcrumb[] = l($league->name, 'pickem/'. $league->lid);
  drupal_set_breadcrumb($breadcrumb);

  $g = new open_flash_chart_api();
  $g->set_title( t('Team Pickability (Regular Season)'), '{font-size: 20px;}' );
  $g->set_width('100%');
  $g->set_height('480');

  $teams = get_team_totals($league, $sort_by);
  $x_labels = array();
  $a = array();
  foreach ($teams as $tid => $team_data) {
    $a[] = $team_data['pickability'];
    $x_labels[] = $team_data['abbrev'];
  }
  $g->set_data($a);
  $g->area_hollow( 2, 3, 25, '#000080', 'Correctly Picked', 12);

  $a = array();
  foreach ($teams as $tid => $team_data) {
    $a[] = $team_data['pickability_w'];
  }
  $g->set_data($a);
  $g->area_hollow( 2, 3, 25, '#800080', 'Correctly Picked To Win', 12);


  $g->set_x_labels( $x_labels );
  $g->set_x_label_style( 12, '#000000', 2);

  $g->set_x_legend( 'Percent that a team is correctly picked', 12);

  $g->set_y_max( 100 );
  $g->y_label_steps( 10 );
  $g->set_y_legend( 'Percent', 12);

  $g->set_bg_colour('0xDFFFDF');
  //echo $g->render();

  $g->set_tool_tip( '#x_label# (#val#)' );

  $o = $g->render('js');

  if ($sort_by == 'to_win' ) {
    $o .= l('Sort By "Correctly Picked"', 'pickem/'. $league->lid .'/chart2/win_lose', array('html' => TRUE));
  }
  else {
    $o .= l('Sort By "Correctly Picked To Win"', 'pickem/'. $league->lid .'/chart2/to_win', array('html' => TRUE));
  }

  print theme('page', $o);
}

function chart3($league, $team_id) {
  drupal_set_title('Charts');

  $breadcrumb = drupal_get_breadcrumb();
  $breadcrumb[] = l($league->name, 'pickem/'. $league->lid);
  drupal_set_breadcrumb($breadcrumb);

  $teams = get_teams(array('gameset_id' => $league->gsid));

  $g = new open_flash_chart_api();
  $g->set_title( t('Team Scoring - '. $teams[$team_id]->tm_abbrev ), '{font-size: 20px;}' );
  $g->set_width('100%');
  $g->set_height('480');

  $x_labels = array();
  $pf = array();
  $pa = array();
  $games = get_games(array('gameset_id' => $league->gsid, 'team_id' => $team_id));
  foreach ($games as $gid => $row) {
    if ( is_null($row->h_score) || is_null($row->v_score)  ) {
      continue;
    }

    if ( $team_id == $row->h_id ) {
      $pf[] = $row->h_score;
      $pa[] = $row->v_score;
      $x_labels[] = $teams[$row->v_id]->tm_abbrev;
    }
    else {
      $pf[] = $row->v_score;
      $pa[] = $row->h_score;
      $x_labels[] = $teams[$row->h_id]->tm_abbrev;
    }
  }
  $g->set_data($pf);
  $g->area_hollow( 2, 3, 25, '#000080', 'Points For', 12);

  $g->set_data($pa);
  $g->area_hollow( 2, 3, 25, '#800080', 'Points Against', 12);

  $g->set_x_labels( $x_labels );
  $g->set_x_label_style( 12, '#000000', 2);

  $g->set_x_legend( 'Opponent', 12);

  $g->set_y_max( 60 );
  $g->y_label_steps( 10 );
  $g->set_y_legend( 'Points', 12);

  $g->set_bg_colour('0xDFFFDF');
  //echo $g->render();

  $g->set_tool_tip( $teams[$team_id]->tm_abbrev .' vs #x_label# (#val#)');

  $o = $g->render('js');

  print theme('page', $o);
}

function email_warning($user, $week_id, $firstgame, $missing_picks, $league_id) {

  $headers['Content-Type'] = 'text/plain; charset=UTF-8; format=flowed';
  //$headers['Content-Type'] = 'text/html; charset=UTF-8;';

  $subject = 'Sports Pickem: Week '. $week_id .' picks due!';
  $link = check_url(url("pickem/". $league_id ."/picks/". $week_id, array( 'absolute' => TRUE )));
  $body = "Picks Due Before: $firstgame (EST)\n\nJust a reminder, you're missing $missing_picks picks for week $week_id\n\n$link";

  $from = variable_get('pickem_commisioner_email', '');
  $headers['From'] = $from;
  //$headers['Bcc'] = $from;

  $to = $user->name .' <'. $user->mail .'>';

  $params = array();
  $params['headers'] = $headers;
  $params['subject'] = $subject;
  $params['body'] = $body;

  // $module, $key, $to, $language, $params = array(), $from = NULL, $send = TRUE
  $message = drupal_mail('email_warning', 'notice', $to, language_default(), $params);
  if ($message['result'] != 1) {
    watchdog('pickem', 'Error Sending '.  $user->name .": Week $week_id Warning");
  }

}

/*
  implementation of hook_mail
*/
function email_warning_mail($key, &$message, $params) {
  switch ($key) {
    case 'notice':
      $message['headers'] = $params['headers'];
      $message['subject'] = $params['subject'];
      $message['body'] = $params['body'];
      break;
  }
}


// Requires the countdowntimer module
function get_countdown_timer($current_week) {

$o = <<<EOD
Reminder: Week {$current_week->wk_number} picks due in
<span class="countdowntimer">
<span style="display:none" class="datetime">{$current_week->firstgame_xml}</span>
<span style="display:none" class="format_txt">%days% days + %hours%:%mins%:%secs%(%dow%)</span>
</span>
EOD;

return $o;
}

function pickem_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {
    case 'list':
      // If $op is "list", we just need to return a list of block descriptions.
      // This is used to provide a list of possible blocks to the administrator,
      // end users will not see these descriptions.
      // A block can provide default settings.
      $blocks[0] = array(
        'info'       => t('Pickem Leagues'),
        'visibility' => 1,
        'pages'      => 'pickem/*'
      );
      $blocks[1] = array(
        'info'       => t('Pickem Leaderboard'),
        'visibility' => 2,
        'pages'      => "<?php return (arg(0)=='pickem' && is_numeric(arg(1)) && arg(2)=='')?TRUE:FALSE;?>",
        'cache' => BLOCK_NO_CACHE
      );
      $blocks[2] = array(
        'info'       => t('Pickem This Weeks Games'),
        'visibility' => 2,
        'pages'      => "<?php return (arg(0)=='pickem' && is_numeric(arg(1)) && arg(2)=='')?TRUE:FALSE;?>",
        'cache' => BLOCK_NO_CACHE
      );
      return $blocks;
    case 'configure':
      // If $op is "configure", we need to provide the administrator with a
      // configuration form. The $delta parameter tells us which block is being
      // configured. In this example, we'll allow the administrator to customize
      // the text of the first block.
      $form = array();
      if ($delta == 0) {
        // All we need to provide is a text field, Drupal will take care of
        // the other block configuration options and the save button.
        //$form['block_example_string'] = array(
        //  '#type' => 'textfield',
        //  '#title' => t('Block contents'),
        //  '#size' => 60,
        //  '#description' => t('This string will appear in the example block.'),
        //  '#default_value' => variable_get('block_example_string',  t('Some example content.')),
        //);
      }
      return $form;
    case 'save':
      // If $op is "save", we need to save settings from the configuration form.
      // Since the first block is the only one that allows configuration, we
      // need to check $delta to make sure we only save it.
      //if ($delta == 0) {
        // Have Drupal save the string to the database.
      //  variable_set('block_example_string', $edit['block_example_string']);
      //}
      //return;
    case 'view': default:
      switch ($delta) {
        case 0:
          $block['subject'] = t('My Leagues');
          $block['content'] = get_my_league_switcher();
          break;
        case 1:
          $block['subject'] = t('Leaderboard');
          $league = league_load(arg(1));
          $block['content'] = theme('leaderboard_block', $league);
          break;
        case 2:
          $league = league_load(arg(1));
          $cur_w = get_current_week($league, FALSE);
          $block['subject'] = 'Games(week '. $cur_w->wk_number .')';
          $league = league_load(arg(1));
          $block['content'] = theme('this_weeks_games_block', $league);
      }
      return $block;
  }
}

function get_my_league_switcher() {
  $leagues = get_my_leagues();

  if ( count($leagues) < 2 ) {
    return '';
  }

  $o = '';
  $list = explode('/', $_GET['q']);
  if ( count($list) > 2 ) {
    // discard first two items
    array_shift($list);
    array_shift($list);
  }

  foreach ($leagues as $l) {
    if ( arg(1) == $l->lid ) {
      $o .= l('&raquo; '. $l->name, 'pickem/'. $l->lid, array('html' => TRUE)) .'<br/>';
    }
    else {
      $o .= l($l->name, 'pickem/'. $l->lid) .'<br/>';
    }
  }
  return $o;
}

function get_all_league_switcher() {
  $leagues = get_leagues();
  $o = '';
  foreach ($leagues as $l) {
    if ( arg(1) == $l->lid ) {
      $o .= l('&raquo; '. $l->name, 'pickem/'. $l->lid, array('html' => TRUE)) .'<br/>';
    }
    else {
      $o .=l ($l->name, 'pickem/'. $l->lid) .'<br/>';
    }
  }
  return $o;
}


function league_access($string, $account = NULL) {
  drupal_set_message('league_access');

  global $user;

  if (is_null($account)) {
    $account = $user;
  }

  // Need play pickem first
  if ( user_access('play pickem', $account) == FALSE ) {
    return FALSE;
  }

  if ( $string == 'league access' ) {
    $leagues = get_my_leagues($account);
    foreach ($leagues as $l) {
      if ( arg(1) == $l->lid ) {
        return TRUE;
      }
    }
  }
  return FALSE;
}
